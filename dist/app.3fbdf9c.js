webpackJsonp([1],[function(e,n,t){"use strict";function s(e){return e&&e.__esModule?e:{"default":e}}var a=t(1),o=s(a),i=t(3),c=s(i);new o["default"]({el:"body",components:{App:c["default"]}})},,function(e,n,t){e.exports='<header class="header">\n  <nav class="nav">\n    <ul class="nav-list">\n      <li class="nav-item">\n        <a class="nav-link" href="http://cookingjs.github.io/">Docs</a>\n      </li>\n      <li class="nav-item">\n        <a class="nav-link" href="http://cookingjs.github.io/list-of-plugins.html">Plugins</a>\n      </li>\n      <li class="nav-item">\n        <a class="nav-link" href="https://github.com/ElemeFE/cooking">Github</a>\n      </li>\n    </ul>\n  </nav>\n\n  <div class="main-wrap">\n    <h1 class="headline">\n      <img class="logo" src="'+t(6)+'" alt="logo">\n      cooking\n    </h1>\n    <p class="desc">更易上手的前端构建工具</p>\n    <input class="install" @click="handleCopyCmd" value="npm install cooking -g" readonly>\n\n    <div class="buttongroup">\n      <iframe class="button" src="https://ghbtns.com/github-btn.html?user=elemefe&repo=cooking&type=star&count=true" frameborder="0" scrolling="0" width="80px" height="20px"></iframe>\n      <iframe class="button" src="https://ghbtns.com/github-btn.html?user=elemefe&repo=cooking&type=fork&count=true" frameborder="0" scrolling="0" width="80px" height="20px"></iframe>\n    </div>\n  </div>\n</header>\n\n\n<section class="intro">\n  <h1 class="headline">不仅简单而且高效</h1>\n  <p class="text">cooking 的目标是将你从繁琐的构建配置中解放出来，同时还省去每个项目都要安装一堆开发依赖的麻烦。基于 webapck 但更友好的配置项、易用的扩展配置机制，让你专注项目忘掉配置。</p>\n  <video class="video" src="//7i7gvg.com1.z0.glb.clouddn.com/demo.mp4" type="video/mp4" controls preload="auto" poster></video>\n</section>\n\n<div class="warp">\n  <section class="quickstart">\n    <h1 class="headline">快速开始</h1>\n    <code class="shell">\n      <div class="comment"># 创建一个项目为 my-project 的 vue 项目</div>\n      <div class="command">$ cooking create my-project vue</div>\n      <br />\n      <div class="comment"># 进入目录后，启动开发模式 (Development)</div>\n      <div class="command">$ cooking watch</div>\n    </code>\n    <p class="more">更详细的使用方式请<a class="link" href="http://cookingjs.github.io">参考文档</a></p>\n  </section>\n</div>\n\n<section class="info grid">\n  <div class="feature grid-col">\n    <h1 class="feature-title">基于 webpack</h1>\n    <p class="feature-text">如果重写原配置文件，只需少量甚至不修改，即可让 cooking 使用已有的 webapck 配置文件。<a href="http://cookingjs.github.io/migration-guide" class="link">迁移指南</a></p>\n  </div>\n\n  <div class="feature grid-col">\n    <h1 class="feature-title">项目零开发依赖</h1>\n    <p class="feature-text">多个项目共用同一个 webpack，省去项目内安装多个开发依赖的过程，从创建项目到启动开发环境花费时间不到十秒。</p>\n  </div>\n\n  <div class="feature grid-col">\n    <h1 class="feature-title">配置简单</h1>\n    <p class="feature-text">将 webpack 的常见配置转换成更直观的参数，简单的配置即可实现 devServer、chunk、ES6 预处理、ESLint 等功能。</p>\n  </div>\n\n  <div class="feature grid-col">\n    <h1 class="feature-title">脚手架</h1>\n    <p class="feature-text">内置脚手架功能，能快速创建包含 cooking 配置文件的空项目。脚手架为 Github 远程仓库，可以轻松定义自己的脚手架。</p>\n  </div>\n\n  <div class="feature grid-col">\n    <h1 class="feature-title">插件机制</h1>\n    <p class="feature-text">cooking 只包含最基本的功能，可以用插件机制来增强功能。每个项目可以使用不同的插件，只有在需要时才自动安装。</p>\n  </div>\n\n  <div class="feature grid-col">\n    <h1 class="feature-title">个性化设置</h1>\n    <p class="feature-text">除了插件、脚手架之外，还提供指令、依赖包的扩展，可以将 cooking 打造成适合自己团队使用的构建工具。</p>\n  </div>\n</section>\n\n<footer class="footer">\n  <a href="https://github.com/ElemeFE/" target="_blank" class="copyright">&copy; ElemeFE</a>\n</footer>\n'},function(e,n,t){var s,a;t(5),s=t(4),e.exports=s||{},e.exports.__esModule&&(e.exports=e.exports["default"]),a&&(("function"==typeof e.exports?e.exports.options||(e.exports.options={}):e.exports).template=a)},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n["default"]={name:"app",template:t(2),methods:{handleCopyCmd:function(e){e.target.select()}}}},function(e,n){},function(e,n,t){e.exports=t.p+"static/logo.f3eae12.svg"}]);